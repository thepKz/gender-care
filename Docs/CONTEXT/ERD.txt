Table Users { 
  _id ObjectId [pk] 
  email String [unique] 
  password String 
  fullName String 
  phone String 
  avatar String 
  gender String 
  address String 
  year DateTime 
  role String // "customer", "doctor", "staff", "manager", "admin" - Removed "guest" role
  emailVerified Boolean [default: false] 
  isActive Boolean [default: true] 
  createdAt DateTime 
  updatedAt DateTime 
} 
 
Table StaffDetails { 
  _id ObjectId [pk] 
  userId ObjectId [ref: - Users._id, unique] 
  staffType String // "Nursing", "Blogers", "Normal" 
  createdAt DateTime 
  updatedAt DateTime 
} 
 
Table OtpCodes { 
  _id ObjectId [pk] 
  userId ObjectId [ref: > Users._id] 
  type String // "email_verification", "password_reset", "login" 
  otp String 
  expires DateTime 
  verified Boolean [default: false] 
  verifiedAt DateTime 
  attempts Number [default: 0] 
  createdAt DateTime 
} 
 
Table LoginHistory { 
  _id ObjectId [pk] 
  userId ObjectId [ref: > Users._id] 
  ipAddress String 
  userAgent String 
  loginAt DateTime 
  status String // "success", "failed" 
  failReason String 
} 
 
Table Doctors {
  _id              ObjectId [pk]                            
  userId           ObjectId [ref: - Users._id]            
  bio              String
  rating           Number
  image            String                                
  specialization   String
  education        String
  certificates     JSON      
  experiences      JSON      
  approvalStatus   String      
  pendingChanges   JSON         
  lastApprovedBy   ObjectId [ref: > Users._id]
  lastApprovedAt   DateTime
  rejectionReason  String
  createdAt        DateTime
  updatedAt        DateTime
}

Table DoctorSchedules { 
  _id ObjectId [pk] 
  doctorId Object [ref: > Doctors._id] 
  weekSchedule weekScheduleObject[] [note: 'Array of embedded weekScheduleObject'] 
  createdAt DateTime 
  updatedAt DateTime 
} 
 
Table weekScheduleObject { 
  _id ObjectId [note: 'Not a separate collection, embedded in DoctorSchedules.weekSchedule'] 
  dayOfWeek String 
  slots TimeSlots[] [note: 'Array of embedded TimeSlots'] 
} 
 
Table TimeSlots { 
  _id ObjectId [note: 'Not a separate collection, embedded in weekScheduleObject.slots'] 
  slotTime String 
  isBooked Boolean [default: false] 
} 
 
Table Appointments { 
  _id ObjectId [pk] 
  createdByUserId ObjectId [ref: > Users._id] 
  profileId ObjectId [ref: > UserProfiles._id] 
  packageId ObjectId [ref: > ServicePackages._id] 
  serviceId ObjectId [ref: > Services._id] 
  // 1 hoac 2 duoc chon 
  slotId ObjectId [Note: 'embedded document'] 
  appointmentDate DateTime // Day 
  appointmentTime String // 8:00 9:00 
  appointmentType String // "consultation", "test", "other" 
  typeLocation String // "clinic", "home", "Online" 
  address String 
  description String 
  notes String 
  status String // "pending", "confirmed", "completed", "cancelled" 
  createdAt DateTime 
  updatedAt DateTime 
} 

Table Services { 
  _id ObjectId [pk]
  serviceName String 
  price Number 
  description String 
  isDeleted Boolean 
  serviceType String // "consultation", "test", "other" 
  availableAt String[] // Athome, Online, Center 
} 

// FIXED: Added clear references to link feedback with appointment and patient
Table Feedbacks { 
  _id ObjectId [pk] 
  rating Number 
  feedback String 
  comment String 
  appointmentId ObjectId [ref: > Appointments._id] 
  profileId ObjectId [ref: > UserProfiles._id] // ADDED: Who gave feedback
  doctorId ObjectId [ref: > Doctors._id] 
  serviceId ObjectId [ref: > Services._id] 
  packageId ObjectId [ref: > ServicePackages._id] 
} 

Table MenstrualCycles { 
  _id ObjectId [pk] 
  createdByUserId ObjectId [ref: > Users._id] 
  startDate DateTime 
  endDate DateTime 
  stamp string 
  symbol string 
  mood String 
  observation String 
  notes String 
  createdAt DateTime 
  updatedAt DateTime 
} 
 
Table CycleSymptoms { 
  _id ObjectId [pk] 
  cycleId ObjectId [ref: > MenstrualCycles._id] 
  symptom String 
} 

Table MedicationReminders { 
  _id ObjectId [pk] 
  createdByUserId ObjectId [ref: > Users._id] 
  profileId ObjectId [ref: > UserProfiles._id] // ADDED: Direct profile reference for easier querying
  medicalRecordId ObjectId [ref: > MedicalRecords._id] 
  medicines Array[]  
  notes String 
  isActive Boolean [default: true] 
  createdAt DateTime 
  updatedAt DateTime 
} 

Table Medicines { 
  name String 
  type String // "contraceptive", "vitamin", "other" 
  time String 
  dosage String 
} 
 
Table NotificationDays { 
  _id ObjectId [pk] 
  reminderId ObjectId [ref: > MedicationReminders._id] 
  notificationTimes DateTime 
  status String // "send", "failed" 
  createdAt DateTime 
  updatedAt DateTime 
} 

Table ServiceTestCategories {
  _id ObjectId [pk]
  serviceId ObjectId [ref: > Services._id]
  testCategoryId ObjectId [ref: > TestCategories._id]
  isRequired Boolean [default: true] 
  createdAt DateTime
}

// FIXED: Added missing references to appointment and profile
Table TestResults { 
  _id ObjectId [pk] 
  appointmentId ObjectId [ref: > Appointments._id] // ADDED: Link to which appointment
  profileId ObjectId [ref: > UserProfiles._id] // ADDED: Link to which patient
  doctorId ObjectId [ref: > Doctors._id] // ADDED: Which doctor ordered the test
  testResultItemsId ObjectId [ref: > TestResultItems._id]
  conclusion String 
  recommendations String 
  createdAt DateTime 
} 

Table TestCategories { 
  _id ObjectId [pk] 
  name String [unique]       
  description String          
  unit String                
  normalRange String         
  createdAt DateTime 
  updatedAt DateTime 
} 
 
Table TestResultItems { 
  _id ObjectId [pk] 
  itemNameId ObjectId [ref: > TestCategories._id]   
  value String                                         
  unit String                                          
  currentRange String                                   
  flag String // "high", "low", "normal" 
} 

Table UserProfiles { 
  _id ObjectId [pk] 
  ownerId ObjectId [ref: > Users._id] 
  fullName String 
  gender String 
  phone String 
  year DateTime 
  createdAt DateTime 
  updatedAt DateTime 
} 
 
Table SystemConfigs { 
  _id ObjectId [pk] 
  key String [unique] 
  value String 
} 
 
Table ServicePackages { 
  _id ObjectId [pk] 
  name String 
  description String 
  priceBeforeDiscount Number 
  price Number 
  serviceIds ObjectId[] [ref: > Services._id] 
  isActive Boolean [default: true] 
  createdAt DateTime 
  updatedAt DateTime 
} 

Table DoctorQA { 
  _id ObjectId [pk] 
  doctorId ObjectId [ref: > Doctors._id] 
  userId ObjectId [ref: > Users._id] 
  profileId ObjectId [ref: > UserProfiles._id] // ADDED: Which profile the question relates to
  fullName String 
  phone String 
  notes String 
  question String 
  status String // "pending", "contacted", "resolved", "cancelled" 
  createdAt DateTime 
  updatedAt DateTime 
} 
 
Table Bills { 
  _id ObjectId [pk]
  userId ObjectId [ref: > Users._id] 
  profileId ObjectId [ref: > UserProfiles._id] 
  billNumber String [unique] 
  packageId ObjectId [ref: > ServicePackages._id] 
  appointmentId ObjectId [ref: > Appointments._id] 
  subtotal Number 
  discountAmount Number [default: 0] 
  totalAmount Number 
  status String // "pending", "paid", "cancelled" 
  createdAt DateTime 
  updatedAt DateTime 
  // Constraint: packageId IS NOT NULL OR appointmentId IS NOT NULL (at least one must be present)
} 
 
Table Payments { 
  _id ObjectId [pk] 
  userId ObjectId [ref: > Users._id] 
  billId ObjectId [ref: > Bills._id] 
  amount Number 
  paymentMethod String // "credit_card", "bank_transfer", "mobile_payment", "cash" 
  paymentGateway String 
  transactionId String 
  status String // "pending", "completed", "failed", "refunded" 
  failureReason String
  refund Json  
  createdAt DateTime 
  updatedAt DateTime 
  paymentAt DateTime 
} 
 
Table PackagePurchases { 
  _id ObjectId [pk]  
  profileId ObjectId [ref: > UserProfiles._id] 
  userId ObjectId [ref: > Users._id] 
  packageId ObjectId [ref: > ServicePackages._id] 
  billId ObjectId [ref: > Bills._id] 
  createdAt DateTime 
  updatedAt DateTime 
} 

 
Table MedicalRecords { 
  _id ObjectId [pk] 
  doctorId ObjectId [ref: > Doctors._id] 
  appointmentId ObjectId [ref: > Appointments._id] 
  diagnosis String 
  symptoms String 
  treatment String 
  notes String 
  pictures String[] 
  createdAt DateTime
  updatedAt DateTime 
}
