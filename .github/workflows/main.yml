# CI/CD for Admin page and Client Page bonus Backend Page
name: CI/CD

on:
  push:
    branches: [ main, develop, feature/*, chore/** ]
    paths:
      - '**/*.tsx'
      - '**/*.ts'
      - '**/*.js'
      - '**/*.json'
      - 'vite.config.*'
      - 'package.json'
      - 'package-lock.json'
      - 'Frontend/**'
      - 'Backend/**'
      - '**/*.xml'
      - '**/*.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**/*.tsx'
      - '**/*.ts'
      - '**/*.js'
      - '**/*.json'
      - 'vite.config.*'
      - 'package.json'
      - 'package-lock.json'
      - 'Frontend/**'
      - 'Backend/**'
      - '**/*.xml'
      - '**/*.yml'
  workflow_dispatch:

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies and build backend
        run: |
          cd Backend
          npm ci
          npm install --save-dev copyfiles
          npm run build
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}

      - name: Create frontend .env file
        run: |
          cd Frontend
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          cat .env

      - name: Install dependencies and build frontend
        run: |
          cd Frontend
          npm ci
          npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: Frontend/dist

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: Backend/dist

  # Deploy frontend via FTP
  deploy-frontend:
    needs: test-and-build
    runs-on: ubuntu-latest
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: ./frontend-dist

      - name: FTP Deploy Frontend
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: 112.78.2.94
          username: team05
          password: ${{ secrets.FRONTEND_PASSWORD }}
          port: 21
          protocol: ftp
          local-dir: ./frontend-dist/
          server-dir: /
          dangerous-clean-slate: true

  # Deploy backend via FTP
  deploy-backend:
    needs: test-and-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Render
        run: curl ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          MAIL_USER: ${{ secrets.MAIL_USER }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          API_URL: ${{ secrets.API_URL }}
          PORT: 5000

    
