import bcrypt from 'bcryptjs';
import User from '../models/User';
import UserProfiles from '../models/UserProfiles';

const seedUserProfiles = async () => {
  try {
    console.log('üå± B·∫Øt ƒë·∫ßu seeding UserProfiles...');

    // Ki·ªÉm tra xem ƒë√£ c√≥ data ch∆∞a ƒë·ªÉ tr√°nh duplicate
    const existingUserProfiles = await UserProfiles.findOne({ fullName: 'Nguy·ªÖn VƒÉn Anh' });
    if (existingUserProfiles) {
      console.log('üìù UserProfiles seed data ƒë√£ t·ªìn t·∫°i, b·ªè qua...');
      return;
    }

    // T·∫°o user customer ch√≠nh (ch·ªß t√†i kho·∫£n)
    const hashedPassword = await bcrypt.hash('123456', 10);
    
    const mainUser = await User.create({
      email: 'nguyen.van.anh@gmail.com',
      password: hashedPassword,
      fullName: 'Nguy·ªÖn VƒÉn Anh',
      phone: '0987654321',
      role: 'customer',
      emailVerified: true,
      isActive: true,
      gender: 'male',
      address: '123 ƒê∆∞·ªùng L√™ L·ª£i, Qu·∫≠n 1, TP.HCM',
      year: new Date('1995-03-15')
    });

    console.log('‚úÖ ƒê√£ t·∫°o user ch√≠nh:', mainUser.email);

    // T·∫°o UserProfiles cho c·∫£ gia ƒë√¨nh
    const userProfiles = [
      {
        ownerId: mainUser._id,
        fullName: 'Nguy·ªÖn VƒÉn Anh',
        gender: 'male',
        phone: '0987654321',
        year: new Date('1995-03-15')
      },
      {
        ownerId: mainUser._id,
        fullName: 'Tr·∫ßn Th·ªã B√¨nh',
        gender: 'female', 
        phone: '0976543210',
        year: new Date('1997-07-22')
      },
      {
        ownerId: mainUser._id,
        fullName: 'Nguy·ªÖn Th·ªã C·∫©m',
        gender: 'female',
        phone: null,
        year: new Date('2020-12-10')
      }
    ];

    // Insert t·∫•t c·∫£ profiles
    const createdProfiles = await UserProfiles.insertMany(userProfiles);
    
    console.log('‚úÖ ƒê√£ t·∫°o c√°c UserProfiles:');
    createdProfiles.forEach((profile, index) => {
      const relationship = index === 0 ? '(Ch√≠nh ch·ªß)' : 
                          index === 1 ? '(V·ª£)' : '(Con g√°i)';
      console.log(`   - ${profile.fullName} ${relationship}`);
    });

    console.log(`üéâ Ho√†n th√†nh seeding UserProfiles: ${createdProfiles.length} profiles cho gia ƒë√¨nh`);

  } catch (error) {
    console.error('‚ùå L·ªói khi seeding UserProfiles:', error);
    throw error;
  }
};

export default seedUserProfiles; 