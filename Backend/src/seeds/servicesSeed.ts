import Service from '../models/Service';

const servicesData = [
    {
        serviceName: 'Kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥ nam khoa',
        price: 500000,
        description: 'Kh√°m nam khoa ƒë·ªãnh k·ª≥, t·∫ßm so√°t ung th∆∞ ti·ªÅn li·ªát tuy·∫øn v√† c√°c b·ªánh l√Ω nam khoa',
        serviceType: 'consultation',
        availableAt: ['Center']
    },
    {
        serviceName: 'Kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥ ph·ª• khoa',
        price: 450000,
        description: 'Kh√°m ph·ª• khoa ƒë·ªãnh k·ª≥, t·∫ßm so√°t ung th∆∞ c·ªï t·ª≠ cung v√† c√°c b·ªánh l√Ω ph·ª• khoa',
        serviceType: 'consultation',
        availableAt: ['Center']
    },
    {
        serviceName: 'X√©t nghi·ªám STIs',
        price: 800000,
        description: 'X√©t nghi·ªám t·∫ßm so√°t c√°c b·ªánh l√¢y truy·ªÅn qua ƒë∆∞·ªùng t√¨nh d·ª•c (STIs) c∆° b·∫£n',
        serviceType: 'test',
        availableAt: ['Center']
    },
    {
        serviceName: 'X√©t nghi·ªám STDi',
        price: 1200000,
        description: 'X√©t nghi·ªám t·∫ßm so√°t b·ªánh l√¢y truy·ªÅn qua ƒë∆∞·ªùng t√¨nh d·ª•c n√¢ng cao (STDi), bao g·ªìm HIV, Hepatitis B, C',
        serviceType: 'test',
        availableAt: ['Center']
    },
    {
        serviceName: 'T∆∞ v·∫•n online (Google Meet)',
        price: 300000,
        description: 'T∆∞ v·∫•n s·ª©c kh·ªèe sinh s·∫£n v√† k·∫ø ho·∫°ch h√≥a gia ƒë√¨nh qua Google Meet',
        serviceType: 'consultation',
        availableAt: ['Online']
    }
];

export const seedServices = async () => {
    try {
        console.log('üå± Seeding services...');

        // X√≥a services c≈© (soft delete)
        await Service.updateMany({}, { isDeleted: 1 });

        // T·∫°o services m·ªõi
        const services = await Service.create(servicesData);

        console.log(`‚úÖ Successfully seeded ${services.length} services:`);
        services.forEach(service => {
            console.log(`   - ${service.serviceName} (${service.serviceType})`);
        });

        return services;
    } catch (error) {
        console.error('‚ùå Error seeding services:', error);
        throw error;
    }
};

export default seedServices; 