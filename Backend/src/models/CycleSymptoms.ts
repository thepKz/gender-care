import mongoose from 'mongoose';

export interface ICycleDays {
  _id?: string;
  cycleId: mongoose.Types.ObjectId;
  date: Date;
  mucusObservation?: string; // "có máu", "lấm tấm máu", "đục", "đục nhiều sợi", "trong nhiều sợi", "trong và ÂH căng", "dầy", "ít chất tiết"
  feeling?: string; // "ướt", "dính", "ẩm", "khô", "trơn"
  isPeakDay: boolean; // true nếu là ngày X
  peakDayRelative?: number; // 0: ngày X, 1-3: sau X, -1/-2: trước X
  fertilityProbability?: number; // 0-100 (% khả năng thụ thai)
  babyGenderHint?: string; // "nam", "nữ", null
  isValidated: boolean; // false nếu sai quy tắc mucus/feeling
  warning?: string; // mô tả lỗi validation (nếu có)
  isAutoGenerated: boolean; // true nếu do hệ thống tự tạo (sau ngày X)
  cycleDayNumber?: number; // thứ tự trong chu kỳ, ví dụ ngày đầu là 1
  notes?: string; // ghi chú cá nhân của người dùng
  month: number; // để biểu diễn lịch tháng
  year: number; // để biểu diễn lịch năm
  createdAt?: Date;
  updatedAt?: Date;
}

// Định nghĩa các enum để validation
export const MUCUS_OBSERVATIONS = [
  'có máu',
  'lấm tấm máu',
  'đục',
  'đục nhiều sợi',
  'trong nhiều sợi',
  'trong và ÂH căng',
  'dầy',
  'ít chất tiết'
] as const;

export const FEELINGS = [
  'ướt',
  'dính',
  'ẩm',
  'khô',
  'trơn'
] as const;

// Validation rules theo phương pháp Billings
export const MUCUS_FEELING_RULES: Record<string, string[]> = {
  'có máu': ['ướt'],
  'lấm tấm máu': ['ướt', 'khô'],
  'đục nhiều sợi': ['ướt', 'trơn'],
  'trong nhiều sợi': ['ướt', 'trơn'],
  'đục': ['dính', 'ẩm', 'khô'],
  'trong và ÂH căng': ['trơn'],
  'ít chất tiết': ['ẩm', 'ướt']
};

const CycleDaysSchema = new mongoose.Schema<ICycleDays>({
  cycleId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'MenstrualCycles',
    required: true
  },
  date: {
    type: Date,
    required: true
  },
  mucusObservation: {
    type: String,
    enum: MUCUS_OBSERVATIONS,
    trim: true
  },
  feeling: {
    type: String,
    enum: FEELINGS,
    trim: true
  },
  isPeakDay: {
    type: Boolean,
    default: false
  },
  peakDayRelative: {
    type: Number,
    min: -7,
    max: 7
  },
  fertilityProbability: {
    type: Number,
    min: 0,
    max: 100,
    default: 0
  },
  babyGenderHint: {
    type: String,
    enum: ['nam', 'nữ'],
    default: null
  },
  isValidated: {
    type: Boolean,
    default: true
  },
  warning: {
    type: String,
    trim: true
  },
  isAutoGenerated: {
    type: Boolean,
    default: false
  },
  cycleDayNumber: {
    type: Number,
    min: 1
  },
  notes: {
    type: String,
    trim: true,
    maxlength: 500
  },
  month: {
    type: Number,
    required: true,
    min: 1,
    max: 12
  },
  year: {
    type: Number,
    required: true
  }
}, {
  timestamps: true,
  toJSON: { virtuals: true },
  toObject: { virtuals: true }
});

// Indexes để tối ưu hóa truy vấn
CycleDaysSchema.index({ cycleId: 1, date: 1 }, { unique: true });
CycleDaysSchema.index({ cycleId: 1, cycleDayNumber: 1 });
CycleDaysSchema.index({ cycleId: 1, isPeakDay: 1 });
CycleDaysSchema.index({ cycleId: 1, month: 1, year: 1 });

// Pre-save middleware để validate mucus/feeling combination
CycleDaysSchema.pre('save', function (next) {
  if (this.mucusObservation && this.feeling) {
    const allowedFeelings = MUCUS_FEELING_RULES[this.mucusObservation];
    if (allowedFeelings && !allowedFeelings.includes(this.feeling)) {
      this.isValidated = false;
      this.warning = `Cảm giác "${this.feeling}" không phù hợp với quan sát chất nhờn "${this.mucusObservation}"`;
    } else {
      this.isValidated = true;
      this.warning = undefined;
    }
  }

  // Auto-fill month and year from date
  if (this.date) {
    this.month = this.date.getMonth() + 1;
    this.year = this.date.getFullYear();
  }

  next();
});

// Virtual để format date cho display
CycleDaysSchema.virtual('formattedDate').get(function () {
  return this.date?.toLocaleDateString('vi-VN');
});

const CycleDays = mongoose.model<ICycleDays>('CycleDays', CycleDaysSchema);

export default CycleDays; 