import mongoose from 'mongoose';
import * as dotenv from 'dotenv';
import { seedDoctorSchedules } from '../seeds/doctorScheduleSeeds';
import { seedServicePackages } from '../seeds/servicePackageSeeds';

// Load environment variables
dotenv.config();

const connectDB = async () => {
  try {
    const mongoURI = process.env.MONGO_URI || 'mongodb://localhost:27017/genderhealthcare';
    await mongoose.connect(mongoURI);
    console.log('‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng');
  } catch (error) {
    console.error('‚ùå L·ªói k·∫øt n·ªëi MongoDB:', error);
    process.exit(1);
  }
};

const testNewSeeds = async () => {
  try {
    console.log('üß™ B·∫Øt ƒë·∫ßu test seeds m·ªõi...\n');

    // Test Doctor Schedules Seed
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log('üî¨ TESTING DOCTOR SCHEDULES SEED');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    await seedDoctorSchedules();

    console.log('\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log('üì¶ TESTING SERVICE PACKAGES SEED');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    await seedServicePackages();

    console.log('\nüéâ Ho√†n th√†nh test t·∫•t c·∫£ seeds m·ªõi!');
    console.log('üí° L∆∞u √Ω: Seeds s·∫Ω t·ª± ƒë·ªông ki·ªÉm tra v√† b·ªè qua n·∫øu data ƒë√£ t·ªìn t·∫°i');

  } catch (error) {
    console.error('‚ùå L·ªói trong qu√° tr√¨nh test:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå ƒê√£ ng·∫Øt k·∫øt n·ªëi MongoDB');
  }
};

// Main execution
const main = async () => {
  await connectDB();
  await testNewSeeds();
};

// Ch·∫°y script n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  main().catch(error => {
    console.error('‚ùå L·ªói ch·∫°y script:', error);
    process.exit(1);
  });
}

export { testNewSeeds }; 