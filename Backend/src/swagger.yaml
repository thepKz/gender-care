openapi: 3.0.0
info:
  title: Gender Healthcare API
  description: API cho dự án Gender Healthcare
  version: 1.0.0
  contact:
    email: admin@genderhealthcare.com

servers:
  - url: /api
    description: API prefix

tags:
  - name: Auth
    description: Xác thực và phân quyền
  - name: User
    description: Quản lý người dùng
  - name: OTP
    description: Quản lý mã OTP và xác thực
  - name: Doctor
    description: Quản lý bác sĩ
  - name: UserProfile
    description: Quản lý profile người dùng

paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Đăng ký tài khoản mới
      description: Đăng ký tài khoản người dùng mới và gửi email xác thực
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - fullName
                - gender
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  minLength: 6
                fullName:
                  type: string
                  minLength: 3
                phone:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                  description: Giới tính người dùng
      responses:
        '201':
          description: Đăng ký thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Đăng ký thành công!
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      fullName:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      emailVerified:
                        type: boolean
                # Token sẽ được set vào cookie HTTP-only, không trả về trong body.
        '400':
          description: Lỗi dữ liệu đầu vào
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/login:
    post:
      tags:
        - Auth
      summary: Đăng nhập
      description: Đăng nhập vào hệ thống
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Đăng nhập thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Đăng nhập thành công!
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      fullName:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
                      emailVerified:
                        type: boolean
                # Token sẽ được set vào cookie HTTP-only, không trả về trong body.
        '400':
          description: Lỗi dữ liệu đầu vào
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Không có quyền truy cập
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/verify-email:
    post:
      tags:
        - Auth
        - OTP
      summary: Xác thực email
      description: Xác thực email sử dụng mã OTP gửi qua email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
              properties:
                email:
                  type: string
                  format: email
                otp:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: Xác thực thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Xác nhận tài khoản thành công
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      fullName:
                        type: string
                      email:
                        type: string
                      emailVerified:
                        type: boolean
        '400':
          description: Mã không hợp lệ hoặc hết hạn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/request-otp:
    post:
      tags:
        - Auth
        - OTP
      summary: Yêu cầu mã OTP
      description: Yêu cầu mã OTP cho xác thực email, đặt lại mật khẩu, hoặc đăng nhập
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - type
              properties:
                email:
                  type: string
                  format: email
                type:
                  type: string
                  enum: [email_verification, password_reset, login]
      responses:
        '200':
          description: Gửi mã OTP thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Mã OTP đã được gửi đến email của bạn
        '404':
          description: Không tìm thấy người dùng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/verify-otp:
    post:
      tags:
        - Auth
        - OTP
      summary: Xác thực mã OTP
      description: Xác thực mã OTP đã nhập
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - otp
                - type
              properties:
                userId:
                  type: string
                otp:
                  type: string
                  example: "123456"
                type:
                  type: string
                  enum: [email_verification, password_reset, login]
      responses:
        '200':
          description: Xác thực OTP thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          description: Mã OTP không hợp lệ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/forgot-password:
    post:
      tags:
        - Auth
      summary: Quên mật khẩu
      description: Yêu cầu đặt lại mật khẩu thông qua email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Gửi email đặt lại mật khẩu thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Mã xác nhận đã được gửi đến email của bạn
        '404':
          description: Email không tồn tại
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/reset-password:
    post:
      tags:
        - Auth
      summary: Đặt lại mật khẩu
      description: Đặt lại mật khẩu với mã OTP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
                - newPassword
              properties:
                email:
                  type: string
                  format: email
                otp:
                  type: string
                newPassword:
                  type: string
                  format: password
                  minLength: 6
      responses:
        '200':
          description: Đặt lại mật khẩu thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Đặt lại mật khẩu thành công
        '400':
          description: Mã xác nhận không hợp lệ hoặc đã hết hạn
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /auth/check-email-verification:
    get:
      tags:
        - Auth
      summary: Kiểm tra trạng thái xác thực email
      description: Kiểm tra xem email của người dùng đã được xác thực chưa
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Trả về trạng thái xác thực email
          content:
            application/json:
              schema:
                type: object
                properties:
                  emailVerified:
                    type: boolean
                  email:
                    type: string
        '401':
          description: Chưa xác thực
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/profile:
    get:
      tags:
        - User
      summary: Lấy thông tin người dùng
      description: Lấy thông tin profile của người dùng đã đăng nhập
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Thông tin người dùng
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '401':
          description: Chưa xác thực
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Không tìm thấy thông tin người dùng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/profile:
    put:
      tags:
        - User
      summary: Cập nhật thông tin người dùng
      description: Cập nhật thông tin profile của người dùng đã đăng nhập
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                phone:
                  type: string
                avatar:
                  type: string
      responses:
        '200':
          description: Cập nhật thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Cập nhật thành công!
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '401':
          description: Chưa xác thực
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/change-password:
    put:
      tags:
        - User
      summary: Đổi mật khẩu
      description: Đổi mật khẩu người dùng
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentPassword
                - newPassword
              properties:
                currentPassword:
                  type: string
                  format: password
                newPassword:
                  type: string
                  format: password
                  minLength: 6
      responses:
        '200':
          description: Đổi mật khẩu thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Đổi mật khẩu thành công
        '400':
          description: Mật khẩu hiện tại không đúng
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Chưa xác thực
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    post:
      tags:
        - User
      summary: Tạo user mới
      description: Tạo user mới (chỉ admin hoặc staff)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - fullName
              properties:
                email:
                  type: string
                password:
                  type: string
                fullName:
                  type: string
                phone:
                  type: string
                avatar:
                  type: string
                gender:
                  type: string
                address:
                  type: string
                year:
                  type: string
                  format: date
                role:
                  type: string
                  enum: [guest, customer, doctor, staff, manager, admin]
      responses:
        '201':
          description: Tạo user thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          description: Thiếu thông tin
        '409':
          description: Email đã tồn tại
        '500':
          description: Lỗi server

  /users/{userId}:
    get:
      tags:
        - User
      summary: Lấy thông tin user bất kỳ
      description: Lấy chi tiết user theo id (chỉ admin/staff)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Thông tin user
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '404':
          description: Không tìm thấy user
        '500':
          description: Lỗi server
    patch:
      tags:
        - User
      summary: Cập nhật user bất kỳ
      description: Cập nhật thông tin user theo id (chỉ admin/staff)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                phone:
                  type: string
                avatar:
                  type: string
                gender:
                  type: string
                address:
                  type: string
                year:
                  type: string
                  format: date
                role:
                  type: string
                  enum: [guest, customer, doctor, staff, manager, admin]
                isActive:
                  type: boolean
      responses:
        '200':
          description: Cập nhật thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/User'
        '404':
          description: Không tìm thấy user
        '500':
          description: Lỗi server

  /login-history:
    post:
      tags:
        - User
      summary: Ghi nhận lịch sử đăng nhập
      description: Ghi nhận một lần đăng nhập (thành công/thất bại)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - status
              properties:
                userId:
                  type: string
                ipAddress:
                  type: string
                userAgent:
                  type: string
                status:
                  type: string
                  enum: [success, failed]
                failReason:
                  type: string
      responses:
        '201':
          description: Ghi nhận thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/LoginHistory'
        '400':
          description: Thiếu thông tin
        '500':
          description: Lỗi server

  /login-history/{userId}:
    get:
      tags:
        - User
      summary: Lấy lịch sử đăng nhập của user
      description: Lấy danh sách lịch sử đăng nhập theo userId
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Danh sách lịch sử đăng nhập
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LoginHistory'
        '400':
          description: Thiếu userId
        '500':
          description: Lỗi server

  /auth/google:
    post:
      tags:
        - Auth
      summary: Đăng nhập bằng Google
      description: Đăng nhập bằng Google OAuth2, nhận id_token từ FE, xác thực, trả về JWT và user info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: id_token từ Google
      responses:
        '200':
          description: Đăng nhập thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                # Token sẽ được set vào cookie HTTP-only, không trả về trong body.
        '400':
          description: Thiếu hoặc sai token
        '500':
          description: Lỗi server

  /auth/check-email:
    post:
      tags:
        - Auth
      summary: Kiểm tra email đã được sử dụng chưa
      description: Kiểm tra xem email đã tồn tại trong hệ thống hay chưa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Trả về trạng thái có thể sử dụng email hay không
          content:
            application/json:
              schema:
                type: object
                properties:
                  available:
                    type: boolean
                    description: true nếu email chưa được sử dụng, false nếu đã tồn tại
        '400':
          description: Lỗi dữ liệu đầu vào
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/check-phone:
    post:
      tags:
        - Auth
      summary: Kiểm tra số điện thoại đã được sử dụng chưa
      description: Kiểm tra xem số điện thoại đã tồn tại trong hệ thống hay chưa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                phone:
                  type: string
                  description: Số điện thoại cần kiểm tra
      responses:
        '200':
          description: Trả về trạng thái có thể sử dụng số điện thoại hay không
          content:
            application/json:
              schema:
                type: object
                properties:
                  available:
                    type: boolean
                    description: true nếu số điện thoại chưa được sử dụng, false nếu đã tồn tại
        '400':
          description: Lỗi dữ liệu đầu vào
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login-admin:

  /users/profile/avatar/upload:
    post:
      tags:
        - User
      summary: Upload avatar cho user
      description: Upload file ảnh avatar lên server, trả về URL ảnh đã upload
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        '200':
          description: Upload thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: https://res.cloudinary.com/your-cloud/image/upload/v123/avatar.jpg
        '400':
          description: Lỗi upload hoặc thiếu file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Chưa xác thực
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/profile/avatar:
    put:
      tags:
        - User
      summary: Cập nhật URL avatar cho user
      description: Cập nhật URL avatar cho user đã đăng nhập
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - avatar
              properties:
                avatar:
                  type: string
                  example: https://res.cloudinary.com/your-cloud/image/upload/v123/avatar.jpg
      responses:
        '200':
          description: Cập nhật avatar thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Cập nhật avatar thành công
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '400':
          description: Thiếu URL avatar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Chưa xác thực
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Không tìm thấy user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Lỗi server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /doctors:
    get:
      tags:
        - Doctor
      summary: Lấy danh sách tất cả bác sĩ (cho phép guest)
      description: Lấy danh sách tất cả bác sĩ, không yêu cầu xác thực. Bất kỳ ai cũng có thể truy cập.
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Doctor'

    post:
      tags:
        - Doctor
      summary: Tạo bác sĩ mới (tự động tạo user account)
      description: Tạo bác sĩ mới. Hệ thống sẽ tự động tạo user account với email được sinh từ tên bác sĩ và password mặc định.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - fullName
              properties:
                fullName:
                  type: string
                  example: "BS. Nguyễn Văn A"
                  description: "Tên đầy đủ của bác sĩ (bắt buộc, dùng để tạo email)"
                phone:
                  type: string
                  example: "0123456789"
                gender:
                  type: string
                  enum: [male, female, other]
                  example: "male"
                address:
                  type: string
                  example: "TP. Hồ Chí Minh"
                bio:
                  type: string
                  example: "Chuyên gia về sức khỏe sinh sản"
                experience:
                  type: number
                  example: 5
                rating:
                  type: number
                  minimum: 0
                  maximum: 5
                  example: 4.5
                specialization:
                  type: string
                  example: "Phụ khoa - Sinh sản"
                education:
                  type: string
                  example: "Thạc sĩ Y khoa - Đại học Y Dược"
                certificate:
                  type: string
                  example: "Chứng chỉ chuyên khoa cấp I"
      responses:
        '201':
          description: Đã tạo bác sĩ thành công (kèm thông tin user được tạo tự động)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '400':
          description: Thiếu tên bác sĩ hoặc dữ liệu không hợp lệ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Email được tạo tự động đã tồn tại (tên bác sĩ trùng)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Chưa xác thực
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Không có quyền truy cập (chỉ staff/admin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /doctors/{id}:
    get:
      tags:
        - Doctor
      summary: Lấy thông tin bác sĩ theo ID (cho phép guest)
      description: Lấy thông tin chi tiết bác sĩ theo ID, không yêu cầu xác thực. Bất kỳ ai cũng có thể truy cập.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '404':
          description: Không tìm thấy bác sĩ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Doctor
      summary: Cập nhật thông tin bác sĩ (không thể sửa userId)
      description: Cập nhật thông tin bác sĩ. Lưu ý userId không thể được thay đổi để đảm bảo tính toàn vẹn dữ liệu.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorUpdateRequest'
      responses:
        '200':
          description: Đã cập nhật bác sĩ thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
        '400':
          description: Dữ liệu không hợp lệ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Chưa xác thực
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Không có quyền truy cập (chỉ staff/admin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Không tìm thấy bác sĩ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Doctor
      summary: Xóa bác sĩ
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Đã xóa bác sĩ thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Xóa bác sĩ thành công
        '401':
          description: Chưa xác thực
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Không có quyền truy cập (chỉ staff/admin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Không tìm thấy bác sĩ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user-profiles:
    post:
      tags:
        - UserProfile
      summary: Tạo profile mới
      description: Tạo profile cho user đã đăng nhập. Mỗi user có thể có nhiều profiles.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
      responses:
        '201':
          description: Tạo profile thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '400':
          description: Thiếu thông tin bắt buộc
        '401':
          description: Chưa xác thực

    get:
      tags:
        - UserProfile
      summary: Lấy tất cả profiles (Admin/Staff only)
      description: Lấy danh sách tất cả user profiles với phân trang
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserProfile'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          description: Chưa xác thực
        '403':
          description: Không có quyền truy cập

  /user-profiles/me:
    get:
      tags:
        - UserProfile
      summary: Lấy tất cả profiles của chính mình
      description: Lấy tất cả profiles của user đang đăng nhập
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserProfile'
                  count:
                    type: integer
                    description: Số lượng profiles
        '401':
          description: Chưa xác thực

  /user-profiles/{id}:
    get:
      tags:
        - UserProfile
      summary: Lấy profile theo ID
      description: Lấy profile theo ID. Chỉ owner hoặc admin/staff mới xem được.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '400':
          description: ID không hợp lệ
        '404':
          description: Không tìm thấy profile
        '403':
          description: Không có quyền truy cập
        '401':
          description: Chưa xác thực

    put:
      tags:
        - UserProfile
      summary: Cập nhật profile
      description: Cập nhật profile theo ID. Chỉ owner hoặc admin/staff mới cập nhật được.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdateRequest'
      responses:
        '200':
          description: Cập nhật thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/UserProfile'
        '400':
          description: ID không hợp lệ
        '404':
          description: Không tìm thấy profile
        '403':
          description: Không có quyền chỉnh sửa
        '401':
          description: Chưa xác thực

    delete:
      tags:
        - UserProfile
      summary: Xóa profile
      description: Xóa profile theo ID. Chỉ owner hoặc admin mới xóa được.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Xóa thành công
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: ID không hợp lệ
        '404':
          description: Không tìm thấy profile
        '403':
          description: Không có quyền xóa
        '401':
          description: Chưa xác thực

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        fullName:
          type: string
        phone:
          type: string
        avatar:
          type: string
        role:
          type: string
          enum:
            - guest
            - customer
            - doctor
            - staff
            - manager
            - admin
        emailVerified:
          type: boolean
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    
    UserProfile:
      type: object
      properties:
        _id:
          type: string
        ownerId:
          $ref: '#/components/schemas/User'
        fullName:
          type: string
        gender:
          type: string
          enum: [male, female, other]
        phone:
          type: string
        year:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    OtpCode:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
          enum:
            - email_verification
            - password_reset
            - login
        otp:
          type: string
        expires:
          type: string
          format: date-time
        verified:
          type: boolean
        verifiedAt:
          type: string
          format: date-time
        attempts:
          type: integer
        createdAt:
          type: string
          format: date-time
    
    Error:
      type: object
      properties:
        message:
          type: string

    LoginHistory:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        ipAddress:
          type: string
        userAgent:
          type: string
        loginAt:
          type: string
          format: date-time
        status:
          type: string
          enum: [success, failed]
        failReason:
          type: string

    Doctor:
      type: object
      properties:
        userId:
          type: string
        bio:
          type: string
        experience:
          type: number
        rating:
          type: number
        specialization:
          type: string
        education:
          type: string
        certificate:
          type: string

    DoctorWithUser:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        doctor:
          $ref: '#/components/schemas/Doctor'

    DoctorUpdateRequest:
      type: object
      description: Schema cho cập nhật thông tin bác sĩ (không bao gồm userId)
      properties:
        bio:
          type: string
          example: "Chuyên gia về sức khỏe sinh sản"
        experience:
          type: number
          example: 5
        rating:
          type: number
          minimum: 0
          maximum: 5
          example: 4.5
        specialization:
          type: string
          example: "Phụ khoa - Sinh sản"
        education:
          type: string
          example: "Thạc sĩ Y khoa - Đại học Y Dược"
        certificate:
          type: string
          example: "Chứng chỉ chuyên khoa cấp I"

    UserProfileRequest:
      type: object
      required:
        - fullName
        - gender
      properties:
        fullName:
          type: string
          example: "Nguyễn Văn A"
        gender:
          type: string
          enum: [male, female, other]
          example: "male"
        phone:
          type: string
          example: "0123456789"
        year:
          type: string
          format: date
          example: "1990-01-01"

    UserProfileUpdateRequest:
      type: object
      properties:
        fullName:
          type: string
          example: "Nguyễn Văn A"
        gender:
          type: string
          enum: [male, female, other]
          example: "male"
        phone:
          type: string
          example: "0123456789"
        year:
          type: string
          format: date
          example: "1990-01-01"

    Pagination:
      type: object
      properties:
        total:
          type: integer
        page:
          type: integer
        limit:
          type: integer
        totalPages:
          type: integer