import nodemailer from "nodemailer";

import dotenv from "dotenv";
dotenv.config();

// Create a transporter object
export const transporter = nodemailer.createTransport({
  host: "smtp.gmail.com", // Thay ƒë·ªïi host th√†nh Gmail SMTP
  port: 465, // S·ª≠ d·ª•ng c·ªïng 465 cho SSL
  secure: true, // B·∫≠t SSL
  auth: {
    user: process.env.MAIL_USER,
    pass: process.env.MAIL_PASSWORD, // Thay b·∫±ng m·∫≠t kh·∫©u ·ª©ng d·ª•ng c·ªßa Gmail
  },
});

// Th√™m h√†m sendEmail c∆° b·∫£n
export const sendEmail = async (
  to: string,
  subject: string,
  html: string
): Promise<void> => {
  try {
    // Ki·ªÉm tra credentials tr∆∞·ªõc khi g·ª≠i
    if (!process.env.MAIL_USER || !process.env.MAIL_PASSWORD) {
      console.warn('‚ö†Ô∏è  Email credentials not configured. Email sending skipped.');
      console.log(`Would send email to: ${to}, subject: ${subject}`);
      return;
    }

    const mailOptions = {
      from: `"Gender Healthcare" <${process.env.MAIL_USER}>`,
      to,
      subject,
      html,
    };

    await transporter.sendMail(mailOptions);
    console.log(`‚úÖ Email sent successfully to ${to}`);
  } catch (error) {
    console.error("‚ùå Error sending email:", error);
    // Kh√¥ng throw error ƒë·ªÉ tr√°nh crash app
    console.log(`üìß Email sending failed but app continues running`);
  }
};

export const sendVerificationEmail = async (
  to: string,
  otp: string,
  fullName: string
): Promise<void> => {
  const subject = "X√°c th·ª±c t√†i kho·∫£n c·ªßa b·∫°n - Gender Healthcare";
  
  const htmlContent = `
    <div style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #e9e9e9; border-radius: 5px;">
      <div style="text-align: center; margin-bottom: 20px;">
        <h2 style="color: #4A90E2;">Gender Healthcare</h2>
      </div>
      
      <div style="padding: 20px; background-color: #f8f9fa; border-radius: 5px;">
        <h3 style="margin-top: 0;">Xin ch√†o ${fullName},</h3>
        
        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i Gender Healthcare. ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng x√°c th·ª±c ƒë·ªãa ch·ªâ email c·ªßa b·∫°n b·∫±ng m√£ OTP sau:</p>
        
        <div style="background-color: #ffffff; padding: 15px; font-size: 24px; font-weight: bold; text-align: center; letter-spacing: 5px; margin: 20px 0; border-radius: 5px; border: 1px dashed #ccc;">
          ${otp}
        </div>
        
        <p>M√£ n√†y s·∫Ω h·∫øt h·∫°n sau 60 ph√∫t. Vui l√≤ng kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai.</p>
        
        <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, b·∫°n c√≥ th·ªÉ b·ªè qua email n√†y.</p>
      </div>
      
      <div style="margin-top: 20px; padding-top: 20px; border-top: 1px solid #e9e9e9; text-align: center; font-size: 12px; color: #999;">
        <p>¬© ${new Date().getFullYear()} Gender Healthcare. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
      </div>
    </div>
  `;
  
  // G·ªçi h√†m g·ª≠i email
  await sendEmail(to, subject, htmlContent);
};

export const sendResetPasswordEmail = async (
  to: string,
  otp: string,
  fullName: string
): Promise<void> => {
  const subject = "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - Gender Healthcare";
  
  const htmlContent = `
    <div style="font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #e9e9e9; border-radius: 5px;">
      <div style="text-align: center; margin-bottom: 20px;">
        <h2 style="color: #4A90E2;">Gender Healthcare</h2>
      </div>
      
      <div style="padding: 20px; background-color: #f8f9fa; border-radius: 5px;">
        <h3 style="margin-top: 0;">Xin ch√†o ${fullName},</h3>
        
        <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n. ƒê·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng s·ª≠ d·ª•ng m√£ OTP sau:</p>
        
        <div style="background-color: #ffffff; padding: 15px; font-size: 24px; font-weight: bold; text-align: center; letter-spacing: 5px; margin: 20px 0; border-radius: 5px; border: 1px dashed #ccc;">
          ${otp}
        </div>
        
        <p>M√£ n√†y s·∫Ω h·∫øt h·∫°n sau 15 ph√∫t. Vui l√≤ng kh√¥ng chia s·∫ª m√£ n√†y v·ªõi b·∫•t k·ª≥ ai.</p>
        
        <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i ngay l·∫≠p t·ª©c v√¨ t√†i kho·∫£n c·ªßa b·∫°n c√≥ th·ªÉ ƒëang b·ªã x√¢m ph·∫°m.</p>
      </div>
      
      <div style="margin-top: 20px; padding-top: 20px; border-top: 1px solid #e9e9e9; text-align: center; font-size: 12px; color: #999;">
        <p>¬© ${new Date().getFullYear()} Gender Healthcare. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
      </div>
    </div>
  `;
  
  // G·ªçi h√†m g·ª≠i email
  await sendEmail(to, subject, htmlContent);
};

export const sendPasswordChangeAlert = async (
  email: string,
  username: string,
  newPassword: string
) => {
  const mailOptions = {
    from: "Gender Healthcare",
    to: email,
    subject: "Th√¥ng b√°o thay ƒë·ªïi m·∫≠t kh·∫©u - Gender Healthcare",
    html: `
    <!DOCTYPE html>
    <html lang="vi">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Th√¥ng b√°o thay ƒë·ªïi m·∫≠t kh·∫©u</title>
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f9f9f9; }
          .header { background-color: #4A90E2; color: white; padding: 10px; text-align: center; }
          .content { background-color: white; padding: 20px; border-radius: 5px; }
          .footer { text-align: center; margin-top: 20px; font-size: 12px; color: #666; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header"> 
            <h1>Gender Healthcare</h1>
          </div>
          <div class="content">
            <h2>Th√¥ng b√°o thay ƒë·ªïi m·∫≠t kh·∫©u</h2>
            <p>Xin ch√†o ${username},</p>
            <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu thay ƒë·ªïi m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n. M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n l√†:</p>
            <div style="background-color: #f8f9fa; padding: 15px; font-size: 18px; font-weight: bold; text-align: center; margin: 20px 0; border-radius: 5px; border: 1px dashed #ccc;">${newPassword}</div>
            <p>M·∫≠t kh·∫©u m·ªõi c·ªßa b·∫°n s·∫Ω h·∫øt h·∫°n sau 10 ph√∫t.</p>
            <p>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu thay ƒë·ªïi m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.</p>
            <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© Gender Healthcare</p>
          </div>
          <div class="footer">
            <p>¬© ${new Date().getFullYear()} Gender Healthcare. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
          </div>
        </div>  
      </body>
    </html>
  `,
  };

  try {
    await transporter.sendMail(mailOptions);
    console.log("Password change alert email sent successfully");
  } catch (error) {
    console.error("Error sending password change alert email:", error);
    throw error;
  }
};




